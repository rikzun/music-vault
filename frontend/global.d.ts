declare global {
    type N<T> = T | null

    type booleanN = N<boolean>
    type numberN = N<number>
    type bigintN = N<bigint>
    type stringN = N<string>
    type ArrayN<T> = N<Array<T>>
    type ObjectN = N<Object>

    type HTMLElementN = N<HTMLElement>
    type HTMLAnchorElementN = N<HTMLAnchorElement>
    type HTMLAreaElementN = N<HTMLAreaElement>
    type HTMLAudioElementN = N<HTMLAudioElement>
    type HTMLBaseElementN = N<HTMLBaseElement>
    type HTMLBodyElementN = N<HTMLBodyElement>
    type HTMLBRElementN = N<HTMLBRElement>
    type HTMLButtonElementN = N<HTMLButtonElement>
    type HTMLCanvasElementN = N<HTMLCanvasElement>
    type HTMLDataElementN = N<HTMLDataElement>
    type HTMLDataListElementN = N<HTMLDataListElement>
    type HTMLDetailsElementN = N<HTMLDetailsElement>
    type HTMLDialogElementN = N<HTMLDialogElement>
    type HTMLDivElementN = N<HTMLDivElement>
    type HTMLDListElementN = N<HTMLDListElement>
    type HTMLEmbedElementN = N<HTMLEmbedElement>
    type HTMLFieldSetElementN = N<HTMLFieldSetElement>
    type HTMLFormElementN = N<HTMLFormElement>
    type HTMLHeadingElementN = N<HTMLHeadingElement>
    type HTMLHeadElementN = N<HTMLHeadElement>
    type HTMLHRElementN = N<HTMLHRElement>
    type HTMLHtmlElementN = N<HTMLHtmlElement>
    type HTMLIFrameElementN = N<HTMLIFrameElement>
    type HTMLImageElementN = N<HTMLImageElement>
    type HTMLInputElementN = N<HTMLInputElement>
    type HTMLModElementN = N<HTMLModElement>
    type HTMLLabelElementN = N<HTMLLabelElement>
    type HTMLLegendElementN = N<HTMLLegendElement>
    type HTMLLIElementN = N<HTMLLIElement>
    type HTMLLinkElementN = N<HTMLLinkElement>
    type HTMLMapElementN = N<HTMLMapElement>
    type HTMLMetaElementN = N<HTMLMetaElement>
    type HTMLMeterElementN = N<HTMLMeterElement>
    type HTMLObjectElementN = N<HTMLObjectElement>
    type HTMLOListElementN = N<HTMLOListElement>
    type HTMLOptGroupElementN = N<HTMLOptGroupElement>
    type HTMLOptionElementN = N<HTMLOptionElement>
    type HTMLOutputElementN = N<HTMLOutputElement>
    type HTMLParagraphElementN = N<HTMLParagraphElement>
    type HTMLParamElementN = N<HTMLParamElement>
    type HTMLPreElementN = N<HTMLPreElement>
    type HTMLProgressElementN = N<HTMLProgressElement>
    type HTMLQuoteElementN = N<HTMLQuoteElement>
    type HTMLSlotElementN = N<HTMLSlotElement>
    type HTMLScriptElementN = N<HTMLScriptElement>
    type HTMLSelectElementN = N<HTMLSelectElement>
    type HTMLSourceElementN = N<HTMLSourceElement>
    type HTMLSpanElementN = N<HTMLSpanElement>
    type HTMLStyleElementN = N<HTMLStyleElement>
    type HTMLTableElementN = N<HTMLTableElement>
    type HTMLTableColElementN = N<HTMLTableColElement>
    type HTMLTableDataCellElementN = N<HTMLTableDataCellElement>
    type HTMLTableHeaderCellElementN = N<HTMLTableHeaderCellElement>
    type HTMLTableRowElementN = N<HTMLTableRowElement>
    type HTMLTableSectionElementN = N<HTMLTableSectionElement>
    type HTMLTemplateElementN = N<HTMLTemplateElement>
    type HTMLTextAreaElementN = N<HTMLTextAreaElement>
    type HTMLTimeElementN = N<HTMLTimeElement>
    type HTMLTitleElementN = N<HTMLTitleElement>
    type HTMLTrackElementN = N<HTMLTrackElement>
    type HTMLUListElementN = N<HTMLUListElement>
    type HTMLVideoElementN = N<HTMLVideoElement>
    type HTMLWebViewElementN = N<HTMLWebViewElement>

    type SVGElementN = N<SVGElement>
    type SVGSVGElementN = N<SVGSVGElement>
    type SVGCircleElementN = N<SVGCircleElement>
    type SVGClipPathElementN = N<SVGClipPathElement>
    type SVGDefsElementN = N<SVGDefsElement>
    type SVGDescElementN = N<SVGDescElement>
    type SVGEllipseElementN = N<SVGEllipseElement>
    type SVGFEBlendElementN = N<SVGFEBlendElement>
    type SVGFEColorMatrixElementN = N<SVGFEColorMatrixElement>
    type SVGFEComponentTransferElementN = N<SVGFEComponentTransferElement>
    type SVGFECompositeElementN = N<SVGFECompositeElement>
    type SVGFEConvolveMatrixElementN = N<SVGFEConvolveMatrixElement>
    type SVGFEDiffuseLightingElementN = N<SVGFEDiffuseLightingElement>
    type SVGFEDisplacementMapElementN = N<SVGFEDisplacementMapElement>
    type SVGFEDistantLightElementN = N<SVGFEDistantLightElement>
    type SVGFEDropShadowElementN = N<SVGFEDropShadowElement>
    type SVGFEFloodElementN = N<SVGFEFloodElement>
    type SVGFEFuncAElementN = N<SVGFEFuncAElement>
    type SVGFEFuncBElementN = N<SVGFEFuncBElement>
    type SVGFEFuncGElementN = N<SVGFEFuncGElement>
    type SVGFEFuncRElementN = N<SVGFEFuncRElement>
    type SVGFEGaussianBlurElementN = N<SVGFEGaussianBlurElement>
    type SVGFEImageElementN = N<SVGFEImageElement>
    type SVGFEMergeElementN = N<SVGFEMergeElement>
    type SVGFEMergeNodeElementN = N<SVGFEMergeNodeElement>
    type SVGFEMorphologyElementN = N<SVGFEMorphologyElement>
    type SVGFEOffsetElementN = N<SVGFEOffsetElement>
    type SVGFEPointLightElementN = N<SVGFEPointLightElement>
    type SVGFESpecularLightingElementN = N<SVGFESpecularLightingElement>
    type SVGFESpotLightElementN = N<SVGFESpotLightElement>
    type SVGFETileElementN = N<SVGFETileElement>
    type SVGFETurbulenceElementN = N<SVGFETurbulenceElement>
    type SVGFilterElementN = N<SVGFilterElement>
    type SVGForeignObjectElementN = N<SVGForeignObjectElement>
    type SVGGElementN = N<SVGGElement>
    type SVGImageElementN = N<SVGImageElement>
    type SVGLineElementN = N<SVGLineElement>
    type SVGLinearGradientElementN = N<SVGLinearGradientElement>
    type SVGMarkerElementN = N<SVGMarkerElement>
    type SVGMaskElementN = N<SVGMaskElement>
    type SVGMetadataElementN = N<SVGMetadataElement>
    type SVGPathElementN = N<SVGPathElement>
    type SVGPatternElementN = N<SVGPatternElement>
    type SVGPolygonElementN = N<SVGPolygonElement>
    type SVGPolylineElementN = N<SVGPolylineElement>
    type SVGRadialGradientElementN = N<SVGRadialGradientElement>
    type SVGRectElementN = N<SVGRectElement>
    type SVGSetElementN = N<SVGSetElement>
    type SVGStopElementN = N<SVGStopElement>
    type SVGSwitchElementN = N<SVGSwitchElement>
    type SVGSymbolElementN = N<SVGSymbolElement>
    type SVGTextElementN = N<SVGTextElement>
    type SVGTextPathElementN = N<SVGTextPathElement>
    type SVGTSpanElementN = N<SVGTSpanElement>
    type SVGUseElementN = N<SVGUseElement>
    type SVGViewElementN = N<SVGViewElement>

    type BlobN = N<Blob>
    type ArrayBufferN = N<ArrayBuffer>
    type Int8ArrayN = N<Int8Array>
    type Uint8ArrayN = N<Uint8Array>
    type Uint8ClampedArrayN = N<Uint8ClampedArray>
    type Int16ArrayN = N<Int16Array>
    type Uint16ArrayN = N<Uint16Array>
    type Int32ArrayN = N<Int32Array>
    type Uint32ArrayN = N<Uint32Array>
    type Float32ArrayN = N<Float32Array>
    type Float64ArrayN = N<Float64Array>

    type AudioBufferN = N<AudioBuffer>
}

export {}